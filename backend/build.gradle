/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "org.flywaydb.flyway" version "6.5.7"
    //    id "com.gorylenko.gradle-git-properties" version "2.2.1"
}

repositories {
    maven {
        url = uri("https://repo.osgeo.org/repository/release/")
    }
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
    maven {
        url = uri('https://build.shibboleth.net/nexus/content/repositories/releases/')
    }

}

dependencies {
    implementation 'org.apache.skywalking:apm-toolkit-trace:8.2.0'
    implementation 'org.apache.skywalking:apm-toolkit-logback-1.x:8.2.0'

    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat:2.2.2.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.0.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.2.2.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.0.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.2.2.RELEASE'
    implementation 'org.springframework.data:spring-data-jpa'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'org.springframework.security:spring-security-cas:5.3.4.RELEASE'
    implementation 'org.springframework.ldap:spring-ldap-core:2.3.3.RELEASE'

    implementation 'org.springframework.security.extensions:spring-security-saml2-core:1.0.10.RELEASE'
    implementation 'com.github.ulisesbocchio:spring-boot-security-saml:1.17'

    implementation 'net.sf.barcode4j:barcode4j:2.1'
    implementation 'com.icegreen:greenmail-spring:1.5.13'
    implementation 'org.postgresql:postgresql:42.2.0'
    implementation "org.flywaydb:flyway-core:6.5.6"
    implementation 'org.flywaydb.flyway-test-extensions:flyway-test-extensions:6.4.0'
    implementation 'org.flywaydb.flyway-test-extensions:flyway-spring5-test:6.4.0'
    implementation "org.threeten:threeten-extra:1.6.0"
    implementation 'org.hibernate:hibernate-core:5.4.30.Final'
    implementation 'org.springframework:spring-aspects:3.2.4.RELEASE'
    implementation group: 'org.geotools', name: 'gt-referencing', version: '25.0'
    implementation group: 'org.geotools', name: 'gt-epsg-hsql', version: '25.0'
    implementation group: 'org.geotools', name: 'gt-main', version: '25.0'
    implementation group: 'io.jsonwebtoken', name:'jjwt', version: '0.9.1'

    implementation group: 'org.mnode.ical4j', name: 'ical4j', version: '4.0.0-beta3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.2.RELEASE'
    testImplementation 'org.springframework.security:spring-security-test'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

// For direct flyway command with gradle
flyway {
    url = "jdbc:postgresql://localhost:5432/blokatugent"
    schemas = ['public']
    user = "postgres"
    password = "postgres"
}

group = 'be.ugent'
version = '0.2'
description = 'BlokAtUGent'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootRun {
    jvmArgs = ["-Dskywalking.agent.service_name=gateway", "-javaagent:$projectDir/agent/skywalking-agent.jar"]
}

tasks.register("bootRunDev") {
    group = "application"
    description = "Runs the Spring Boot application with the dev profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "dev")
        }
    }
    finalizedBy("bootRun")
}
